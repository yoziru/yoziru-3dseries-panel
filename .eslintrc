{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.eslint.json"
  },
  "extends": [
    "@grafana/eslint-config",
    "plugin:react-hooks/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "rules": {
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "^__",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "consistent-return": "error",
    "@typescript-eslint/explicit-module-boundary-types": ["error", {
      "allowDirectConstAssertionInArrowFunctions": true,
      "allowHigherOrderFunctions": true,
    }],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/sort-type-union-intersection-members": "error",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "no-unneeded-ternary": "error",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": ["error", {
      "ignoreDeclarationMerge": true,
    }],
    "camelcase": "warn",
    "curly": "error",
    "no-return-await": "off",
    "@typescript-eslint/return-await": "error",
    "eqeqeq": ["error", "smart"],
    "import/no-unresolved": "error",
    "no-implicit-coercion": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-shadow": "off",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-unused-expressions": "off",
    "no-unused-vars": "off",
    "prefer-const": "error",
    "react-hooks/exhaustive-deps": "error",
    "react-hooks/rules-of-hooks": "error",
    "react/boolean-prop-naming": ["error", { "validateNested": true }],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/prop-types": "off",
    "use-isnan": "error",
    "valid-typeof": "error",
    "@typescript-eslint/strict-boolean-expressions": [
      "error"
    ],
    "@typescript-eslint/no-shadow": [
      "warn",
      {
        "hoist": "all"
      }
    ],
    "no-console": [
      "error",
      {
        "allow": [
          "error",
          "dir",
          "timeLog",
          "assert",
          "clear",
          "count",
          "countReset",
          "group",
          "groupEnd",
          "table",
          "warn",
          "info",
          "dirxml",
          "groupCollapsed",
          "Console",
          "profile",
          "profileEnd",
          "timeStamp",
          "context"
        ]
      }
    ],
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": [
          ["/^react$/", "/^react-/"],
          ["/^@grafana/"],
          ["/^grafana/"],
          "module",
          ["/^(components|hooks|consts|types|api|pages|routing|assets|state|utils)/"],
          ["parent", "sibling", "index"],
          ["/^__mocks__/"]
        ],
        "alphabetize": { "order": "asc", "ignoreCase": true }
      }
    ]
  },
  "plugins": ["import", "eslint-plugin-import-helpers"],

  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
